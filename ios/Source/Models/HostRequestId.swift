// Copyright (c) 2017-2019 Coinbase Inc. See LICENSE

import Foundation

/// Represents a host initiated request UUID
public struct HostRequestId: Hashable {
    /// Request ID generated by the host
    public let id: String

    /// Session ID generated by the host
    public let sessionId: String

    /// Event ID generated by the host
    public let eventId: String

    /// WalletLink base URL
    public let url: URL

    /// The dapp URL
    public let dappURL: URL

    /// The dapp image URL
    public let dappImageURL: URL?

    /// The dapp name
    public let dappName: String?

    /// The request method type
    let method: RequestMethod

    /// Determine whether this is a cancelation to an existing request
    public var isCancelation: Bool {
        return method == .requestCanceled
    }

    /// Determine if current host request ID can cancel the provided host request ID
    ///
    /// - Parameters:
    ///     - cancellableRequestId: Request to be canceled
    ///
    /// - Returns: True if current host request ID can cancel the provided host request ID
    public func canCancel(_ cancellableRequestId: HostRequestId) -> Bool {
        guard isCancelation, !cancellableRequestId.isCancelation else { return false }

        return dappURL == cancellableRequestId.dappURL &&
            id == cancellableRequestId.id &&
            url == cancellableRequestId.url &&
            sessionId == cancellableRequestId.sessionId
    }
}
