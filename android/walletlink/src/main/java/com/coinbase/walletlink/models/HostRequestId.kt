package com.coinbase.walletlink.models

import java.net.URL

/**
 * Represents a host initiated request UUID
 *
 * @property id Request ID generated by the host
 * @property sessionId Session ID generated by the host
 * @property eventId Event ID generated by the host
 * @property url Host RPC URL
 * @property dappURL The dapp URL
 * @property dappImageURL The dapp image URL
 * @property dappName The dapp name
 * @property method The request method type
 */
data class HostRequestId internal constructor(
    val id: String,
    val sessionId: String,
    val eventId: String,
    val url: URL,
    val dappURL: URL,
    val dappImageURL: URL?,
    val dappName: String?,
    internal val method: RequestMethod
) {
    /**
     * Determine whether this is a cancelation to an existing request
     */
    val isCancelation: Boolean get() = method == RequestMethod.RequestCanceled

    /**
    * Determine if current host request ID can cancel the provided host request ID
    *
    * @param cancellableRequestId Request to be canceled
    *
    * @return True if current host request ID can cancel the provided host request ID
     */
    fun canCancel(cancellableRequestId: HostRequestId): Boolean {
        if (!isCancelation || cancellableRequestId.isCancelation) {
            return false
        }

        return dappURL == cancellableRequestId.dappURL &&
                id == cancellableRequestId.id &&
                url == cancellableRequestId.url &&
                sessionId == cancellableRequestId.sessionId
    }
}
